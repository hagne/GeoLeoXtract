[system]
#number of cpus:
runtype = generic
cpus = 1
#testrun = True # will only test the argument parsing and init reading
testrun = workplan # will return a the workplan only but not the process it. Note, generating the workplan for an extended time range can take a long time (this is aws fault! Not mine :-) ... i think))
verbose


[file_io]

path2processed =  /nfs/stu3data2/Satellite_data/goes/16/ABI_L2_{product}_projected2surfrad/
file_prefix = ABI_L2_{product}_projected2surfrad
#path2output = /mnt/telg/prog/hrrr_sraper/examples/operationalize/output #path to folder where to save output
#outputnameformat = hrrr_surfrad_{datetime}.nc
#outputnameformat= test_{ct.year:04d}{ct.month:02d}{ct.day:02d}_{ct.hour:02d}_{ft:02d}.nc

[locations]
# These are the locations for which model values are extracted.
# Example:
# TBL = 'name': 'Table Mountain (CO)', 'lat': 1, 'lon': 2
# TBL = 'name': 'Table Mountain (CO)', 'lat': 40.12498, 'lon': -105.2368
# sitelist = [{'name': 'test', 'abb': 'tst', 'lat': 40.12498, 'lon': -105.2368}, {'name': 'test2', 'abb': 'tsz', 'lat': 41.12498, 'lon': -115.2368}]
network = surfrad

[products]
sector = conus # not other option implemented yet
satellite = 16 #no other option implemented yet
# products separeted by comma: ACM, ADP, AOD
products = ACM

[workplan]
# Things like time interval, 
# example
# start =   2021-06-05 00:00:00
# end =     2021-06-06 00:00:00
range = last 10 days



