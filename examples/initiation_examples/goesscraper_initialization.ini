[system]
runtype = generic # this is mainly for testing purposes
cpus = 1 # number of cpus
### test run options, just comment out to use them.
#testrun = True # will only test the argument parsing and init reading
#testrun = workplan # will return the workplan only but not process it. Note, generating the workplan for an extended time range can take a long time (this is aws fault! Not mine :-) ... i think))
verbose


[file_io]
path2processed =  /nfs/stu3data2/Satellite_data/goes/{satellite}/ABI_L2_{product}_projected2surfrad/
file_prefix = ABI_L2_{product}_projected2surfrad

[locations]
# These are the locations for which model values are extracted.
# Example:
# single site
# TBL = 'name': 'Table Mountain (CO)', 'lat': 40.12498, 'lon': -105.2368
PNNL = 'name': 'Pacific Northwest National Laboratory', 'lat': 46.341, 'lon': -119.279, 'alt': 127
#
# A pre-defined set (network) of sites. ####TODO: where are those defined
# network = surfrad


[products]
sector = conus             # no other option implemented yet
satellite = 16,17 # 16, 17, or both (comma separated)
# products separeted by comma: ACHA,ACM,ADP,AOD,COD,DSR,CTP,LST
products = ACHA,ACM,ADP,AOD,COD,DSR,CTP,LST

[workplan]
# Things like time interval, 
# example
# start =   2020-09-09 14:00:00
# end =     2020-09-09 14:15:00
# range = last 1 days      #other options: all_time

[concatenate]
## if concatenation is desired at the end of finishing the projection
## currently a foulder on the same level as the path2processed will be generated with an _concat at the end.
concatenate = daily             # i don't think there is another option right now
skip_last                       # Highly recommended! This prevents the generation of incomplete concat files; in case this scrape job is done on a regular basis.



